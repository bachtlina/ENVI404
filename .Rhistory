#plots at each depth
p3 <- ggplot(df528AR214, aes(x= wi, y= vi)) +
geom_point() +
xlab(TeX('$w_i$')) +
ylab(TeX('$v_i$'))+
scale_y_continuous(breaks = c(-0.5, 0, 0.5))+
scale_x_continuous(breaks = c(-0.5, 0, 0.5))+
theme(panel.background = element_rect(fill = "white", colour = "black")) +
theme(aspect.ratio = 1)+
theme(axis.text = element_text(face = "plain", size = 12))
start <- as.numeric(ymd_hms("2021-05-28 17:03:00")) # Enter start time here as "YYYY-MM-DD HH:MM:SS" in 24-hour time
end <- as.numeric(ymd_hms("2021-05-28 17:05:00")) # End time, same format
for (i in 1:nrow(dat)) {
if (as.numeric(dat$time[i]) < start) {
s <- i
}
if (as.numeric(dat$time[i]) < end) {
e <- i
}
}
s <- s + 1
e <- e + 1
u_ave <- mean(dat$u[s:e])
v_ave <- mean(dat$v[s:e])
w_ave <- mean(dat$w[s:e])
ui <- dat$u[s:e] - u_ave
vi <- dat$v[s:e] - v_ave
wi <- dat$w[s:e] - w_ave
uiuj <- array(NA, dim = c(3,3))
uiuj[1,1] <- mean(ui^2)
uiuj[1,2] <- mean(ui*vi)
uiuj[1,3] <- mean(ui*wi)
uiuj[2,2] <- mean(vi^2)
uiuj[2,3] <- mean(vi*wi)
uiuj[3,3] <- mean(wi^2)
df528AR214 <- data.frame(ui, vi, wi)#creates data frame
#plots at each depth
p4 <- ggplot(df528AR214, aes(x= wi, y= vi)) +
geom_point() +
xlab(TeX('$w_i$')) +
ylab(TeX('$v_i$'))+
scale_y_continuous(breaks = c(-0.5, 0, 0.5))+
scale_x_continuous(breaks = c(-0.5, 0, 0.5))+
theme(panel.background = element_rect(fill = "white", colour = "black")) +
theme(aspect.ratio = 1)+
theme(axis.text = element_text(face = "plain", size = 12))
start <- as.numeric(ymd_hms("2021-05-28 17:09:00")) # Enter start time here as "YYYY-MM-DD HH:MM:SS" in 24-hour time
end <- as.numeric(ymd_hms("2021-05-28 17:11:00")) # End time, same format
for (i in 1:nrow(dat)) {
if (as.numeric(dat$time[i]) < start) {
s <- i
}
if (as.numeric(dat$time[i]) < end) {
e <- i
}
}
s <- s + 1
e <- e + 1
u_ave <- mean(dat$u[s:e])
v_ave <- mean(dat$v[s:e])
w_ave <- mean(dat$w[s:e])
ui <- dat$u[s:e] - u_ave
vi <- dat$v[s:e] - v_ave
wi <- dat$w[s:e] - w_ave
uiuj <- array(NA, dim = c(3,3))
uiuj[1,1] <- mean(ui^2)
uiuj[1,2] <- mean(ui*vi)
uiuj[1,3] <- mean(ui*wi)
uiuj[2,2] <- mean(vi^2)
uiuj[2,3] <- mean(vi*wi)
uiuj[3,3] <- mean(wi^2)
df528AR214 <- data.frame(ui, vi, wi)#creates data frame
#plots at each depth
p5 <- ggplot(df528AR214, aes(x= wi, y= vi)) +
geom_point() +
xlab(TeX('$w_i$')) +
ylab(TeX('$v_i$'))+
scale_y_continuous(breaks = c(-0.5, 0, 0.5))+
scale_x_continuous(breaks = c(-0.5, 0, 0.5))+
theme(panel.background = element_rect(fill = "white", colour = "black")) +
theme(aspect.ratio = 1)+
theme(axis.text = element_text(face = "plain", size = 12))
start <- as.numeric(ymd_hms("2021-05-28 17:15:00")) # Enter start time here as "YYYY-MM-DD HH:MM:SS" in 24-hour time
end <- as.numeric(ymd_hms("2021-05-28 17:17:00")) # End time, same format
for (i in 1:nrow(dat)) {
if (as.numeric(dat$time[i]) < start) {
s <- i
}
if (as.numeric(dat$time[i]) < end) {
e <- i
}
}
s <- s + 1
e <- e + 1
u_ave <- mean(dat$u[s:e])
v_ave <- mean(dat$v[s:e])
w_ave <- mean(dat$w[s:e])
ui <- dat$u[s:e] - u_ave
vi <- dat$v[s:e] - v_ave
wi <- dat$w[s:e] - w_ave
uiuj <- array(NA, dim = c(3,3))
uiuj[1,1] <- mean(ui^2)
uiuj[1,2] <- mean(ui*vi)
uiuj[1,3] <- mean(ui*wi)
uiuj[2,2] <- mean(vi^2)
uiuj[2,3] <- mean(vi*wi)
uiuj[3,3] <- mean(wi^2)
df528AR214 <- data.frame(ui, vi, wi)#creates data frame
#plots at each depth
p6 <- ggplot(df528AR214, aes(x= wi, y= vi)) +
geom_point() +
xlab(TeX('$w_i$')) +
ylab(TeX('$v_i$'))+
scale_y_continuous(breaks = c(-0.5, 0, 0.5))+
scale_x_continuous(breaks = c(-0.5, 0, 0.5))+
theme(panel.background = element_rect(fill = "white", colour = "black")) +
theme(aspect.ratio = 1)+
theme(axis.text = element_text(face = "plain", size = 12))
grid.arrange(p1, p2, arrangeGrob(p3, p4, p5, p6, nrow=4), nrow=1, top = "Allegheny River")
#stress tensors
#Allegheny River goes from 16:57:00- 17:21:00 in 2 minute increments
setwd("c:/Users/duquesne/Documents/nortek/data")
fh <- "528AR214" # filename header
fn_sen <- paste(fh, "sen", sep = ".")
sen <- read.table(fn_sen, header = FALSE, sep = "", dec = ".")
sen <- sen %>% rename(mon = V1, day = V2, yea = V3, hou = V4, mnt = V5, sec = V6, err = V7, sta = V8, bat = V9, ssp = V10, hed = V11, pit = V12, rol = V13, tmp = V14, a1 = V15, checksum = V16)
d <- 24*3600*as.numeric(as.Date(paste(sen$yea[1], sen$mon[1], sen$day[1], sep="-"), origin="1970-01-01")) # number of seconds that gives the day
h <- sen$sec[1]+60*sen$mnt[1]+3600*sen$hou[1] # time in seconds
starttime <- as_datetime(d + h) # lubridate datetime for the start of the data
fn_dat <- paste(fh, "dat", sep = ".")
dat <- read.table(fn_dat, header = FALSE, sep = "", dec = ".")
dat <- dat %>% rename(burst = V1, ensemble = V2, w = V3, u = V4, v = V5, amp1 = V6, amp2 = V7, amp3 = V8, snr1 = V9, snr2 = V10, snr3 = V11, corr1 = V12, corr2 = V13, corr3 = V14, p_dbar = V15, a1 = V16, a2 = V17, checksum = V18)
sampling_rate = 64
bar_s <- 15 # averaging window in seconds.  Should evaluate range from depth/mean representative velocity to entire period
bar <- round(bar_s * sampling_rate) # in indexed values [i], round() needed to ensure that it fits within the dataset
# gives decimal time for each data record
dat$time <- starttime + (c(0:(nrow(dat)-1)))/sampling_rate
atmos <- mean(1e4*dat$p_dbar[1:10]) # Pa, to subtract atmospheric pressure
dat$depth <- -(1e4*dat$p_dbar - atmos)/(9.81*997)
start <- as.numeric(ymd_hms("2021-05-28 16:57:00")) # Enter start time here as "YYYY-MM-DD HH:MM:SS" in 24-hour time
end <- as.numeric(ymd_hms("2021-05-28 16:59:00")) # End time, same format
for (i in 1:nrow(dat)) {
if (as.numeric(dat$time[i]) < start) {
s <- i
}
if (as.numeric(dat$time[i]) < end) {
e <- i
}
}
s <- s + 1
e <- e + 1
u_ave <- mean(dat$u[s:e])
v_ave <- mean(dat$v[s:e])
w_ave <- mean(dat$w[s:e])
ui <- dat$u[s:e] - u_ave
vi <- dat$v[s:e] - v_ave
wi <- dat$w[s:e] - w_ave
uiuj <- array(NA, dim = c(3,3))
uiuj[1,1] <- mean(ui^2)
uiuj[1,2] <- mean(ui*vi)
uiuj[1,3] <- mean(ui*wi)
uiuj[2,2] <- mean(vi^2)
uiuj[2,3] <- mean(vi*wi)
uiuj[3,3] <- mean(wi^2)
df528AR214 <- data.frame(ui, vi, wi)#creates data frame
#plots at each depth
p3 <- ggplot(df528AR214, aes(x= wi, y= vi)) +
geom_point() +
xlab(TeX('$w_i$')) +
ylab(TeX('$v_i$'))+
scale_y_continuous(breaks = c(-2, 0, 2))+
scale_x_continuous(breaks = c(-2, 0, 2))+
theme(panel.background = element_rect(fill = "white", colour = "black")) +
theme(aspect.ratio = 1)+
theme(axis.text = element_text(face = "plain", size = 12))
start <- as.numeric(ymd_hms("2021-05-28 17:03:00")) # Enter start time here as "YYYY-MM-DD HH:MM:SS" in 24-hour time
end <- as.numeric(ymd_hms("2021-05-28 17:05:00")) # End time, same format
for (i in 1:nrow(dat)) {
if (as.numeric(dat$time[i]) < start) {
s <- i
}
if (as.numeric(dat$time[i]) < end) {
e <- i
}
}
s <- s + 1
e <- e + 1
u_ave <- mean(dat$u[s:e])
v_ave <- mean(dat$v[s:e])
w_ave <- mean(dat$w[s:e])
ui <- dat$u[s:e] - u_ave
vi <- dat$v[s:e] - v_ave
wi <- dat$w[s:e] - w_ave
uiuj <- array(NA, dim = c(3,3))
uiuj[1,1] <- mean(ui^2)
uiuj[1,2] <- mean(ui*vi)
uiuj[1,3] <- mean(ui*wi)
uiuj[2,2] <- mean(vi^2)
uiuj[2,3] <- mean(vi*wi)
uiuj[3,3] <- mean(wi^2)
df528AR214 <- data.frame(ui, vi, wi)#creates data frame
#plots at each depth
p4 <- ggplot(df528AR214, aes(x= wi, y= vi)) +
geom_point() +
xlab(TeX('$w_i$')) +
ylab(TeX('$v_i$'))+
scale_y_continuous(breaks = c(-2, 0, 2))+
scale_x_continuous(breaks = c(-2, 0, 2))+
theme(panel.background = element_rect(fill = "white", colour = "black")) +
theme(aspect.ratio = 1)+
theme(axis.text = element_text(face = "plain", size = 12))
start <- as.numeric(ymd_hms("2021-05-28 17:09:00")) # Enter start time here as "YYYY-MM-DD HH:MM:SS" in 24-hour time
end <- as.numeric(ymd_hms("2021-05-28 17:11:00")) # End time, same format
for (i in 1:nrow(dat)) {
if (as.numeric(dat$time[i]) < start) {
s <- i
}
if (as.numeric(dat$time[i]) < end) {
e <- i
}
}
s <- s + 1
e <- e + 1
u_ave <- mean(dat$u[s:e])
v_ave <- mean(dat$v[s:e])
w_ave <- mean(dat$w[s:e])
ui <- dat$u[s:e] - u_ave
vi <- dat$v[s:e] - v_ave
wi <- dat$w[s:e] - w_ave
uiuj <- array(NA, dim = c(3,3))
uiuj[1,1] <- mean(ui^2)
uiuj[1,2] <- mean(ui*vi)
uiuj[1,3] <- mean(ui*wi)
uiuj[2,2] <- mean(vi^2)
uiuj[2,3] <- mean(vi*wi)
uiuj[3,3] <- mean(wi^2)
df528AR214 <- data.frame(ui, vi, wi)#creates data frame
#plots at each depth
p5 <- ggplot(df528AR214, aes(x= wi, y= vi)) +
geom_point() +
xlab(TeX('$w_i$')) +
ylab(TeX('$v_i$'))+
scale_y_continuous(breaks = c(-2, 0, 2))+
scale_x_continuous(breaks = c(-2, 0, 2))+
theme(panel.background = element_rect(fill = "white", colour = "black")) +
theme(aspect.ratio = 1)+
theme(axis.text = element_text(face = "plain", size = 12))
start <- as.numeric(ymd_hms("2021-05-28 17:15:00")) # Enter start time here as "YYYY-MM-DD HH:MM:SS" in 24-hour time
end <- as.numeric(ymd_hms("2021-05-28 17:17:00")) # End time, same format
for (i in 1:nrow(dat)) {
if (as.numeric(dat$time[i]) < start) {
s <- i
}
if (as.numeric(dat$time[i]) < end) {
e <- i
}
}
s <- s + 1
e <- e + 1
u_ave <- mean(dat$u[s:e])
v_ave <- mean(dat$v[s:e])
w_ave <- mean(dat$w[s:e])
ui <- dat$u[s:e] - u_ave
vi <- dat$v[s:e] - v_ave
wi <- dat$w[s:e] - w_ave
uiuj <- array(NA, dim = c(3,3))
uiuj[1,1] <- mean(ui^2)
uiuj[1,2] <- mean(ui*vi)
uiuj[1,3] <- mean(ui*wi)
uiuj[2,2] <- mean(vi^2)
uiuj[2,3] <- mean(vi*wi)
uiuj[3,3] <- mean(wi^2)
df528AR214 <- data.frame(ui, vi, wi)#creates data frame
#plots at each depth
p6 <- ggplot(df528AR214, aes(x= wi, y= vi)) +
geom_point() +
xlab(TeX('$w_i$')) +
ylab(TeX('$v_i$'))+
scale_y_continuous(breaks = c(-2, 0, 2))+
scale_x_continuous(breaks = c(-2, 0, 2))+
theme(panel.background = element_rect(fill = "white", colour = "black")) +
theme(aspect.ratio = 1)+
theme(axis.text = element_text(face = "plain", size = 12))
grid.arrange(p1, p2, arrangeGrob(p3, p4, p5, p6, nrow=4), nrow=1, top = "Allegheny River")
#height vs u
p8 <- ggplot(cable_crossing_DO, aes(x = U.m.s. , y= height.m.))+
geom_point() +
labs(x = "Average Velocity (m/s)", y = "Height(m)") +
ggtitle("Velocity profile") +
theme(panel.background = element_rect(fill = "white", colour = "black")) +
theme(axis.text = element_text(face = "plain", size = 12))
#stress tensors
#cable crossing goes from 15:09:00-15:23:00
setwd("c:/Users/duquesne/Documents/nortek/data")
fh <- "629MON15" # filename header
fn_sen <- paste(fh, "sen", sep = ".")
sen <- read.table(fn_sen, header = FALSE, sep = "", dec = ".")
sen <- sen %>% rename(mon = V1, day = V2, yea = V3, hou = V4, mnt = V5, sec = V6, err = V7, sta = V8, bat = V9, ssp = V10, hed = V11, pit = V12, rol = V13, tmp = V14, a1 = V15, checksum = V16)
d <- 24*3600*as.numeric(as.Date(paste(sen$yea[1], sen$mon[1], sen$day[1], sep="-"), origin="1970-01-01")) # number of seconds that gives the day
h <- sen$sec[1]+60*sen$mnt[1]+3600*sen$hou[1] # time in seconds
starttime <- as_datetime(d + h) # lubridate datetime for the start of the data
fn_dat <- paste(fh, "dat", sep = ".")
dat <- read.table(fn_dat, header = FALSE, sep = "", dec = ".")
dat <- dat %>% rename(burst = V1, ensemble = V2, w = V3, u = V4, v = V5, amp1 = V6, amp2 = V7, amp3 = V8, snr1 = V9, snr2 = V10, snr3 = V11, corr1 = V12, corr2 = V13, corr3 = V14, p_dbar = V15, a1 = V16, a2 = V17, checksum = V18)
sampling_rate = 64
bar_s <- 15 # averaging window in seconds.  Should evaluate range from depth/mean representative velocity to entire period
bar <- round(bar_s * sampling_rate) # in indexed values [i], round() needed to ensure that it fits within the dataset
# gives decimal time for each data record
dat$time <- starttime + (c(0:(nrow(dat)-1)))/sampling_rate
atmos <- mean(1e4*dat$p_dbar[1:10]) # Pa, to subtract atmospheric pressure
dat$depth <- -(1e4*dat$p_dbar - atmos)/(9.81*997)
start <- as.numeric(ymd_hms("2021-06-29 15:09:00")) # Enter start time here as "YYYY-MM-DD HH:MM:SS" in 24-hour time
end <- as.numeric(ymd_hms("2021-06-29 15:11:00")) # End time, same format
for (i in 1:nrow(dat)) {
if (as.numeric(dat$time[i]) < start) {
s <- i
}
if (as.numeric(dat$time[i]) < end) {
e <- i
}
}
s <- s + 1
e <- e + 1
u_ave <- mean(dat$u[s:e])
v_ave <- mean(dat$v[s:e])
w_ave <- mean(dat$w[s:e])
ui <- dat$u[s:e] - u_ave
vi <- dat$v[s:e] - v_ave
wi <- dat$w[s:e] - w_ave
uiuj <- array(NA, dim = c(3,3))
uiuj[1,1] <- mean(ui^2)
uiuj[1,2] <- mean(ui*vi)
uiuj[1,3] <- mean(ui*wi)
uiuj[2,2] <- mean(vi^2)
uiuj[2,3] <- mean(vi*wi)
uiuj[3,3] <- mean(wi^2)
df629MON15 <- data.frame(ui, vi, wi)#creates data frame
#plots at each depth
p9 <- ggplot(df629MON15, aes(x= wi, y= vi)) +
geom_point() +
xlim(-0.5, 0.5) +
ylim(-0.8, 0.8) +
xlab(TeX('$w_i$')) +
ylab(TeX('$v_i$'))+
theme(panel.background = element_rect(fill = "white", colour = "black")) +
theme(aspect.ratio = 1)+
theme(axis.text = element_text(face = "plain", size = 12))
start <- as.numeric(ymd_hms("2021-06-29 15:13:00")) # Enter start time here as "YYYY-MM-DD HH:MM:SS" in 24-hour time
end <- as.numeric(ymd_hms("2021-06-29 15:15:00")) # End time, same format
for (i in 1:nrow(dat)) {
if (as.numeric(dat$time[i]) < start) {
s <- i
}
if (as.numeric(dat$time[i]) < end) {
e <- i
}
}
s <- s + 1
e <- e + 1
u_ave <- mean(dat$u[s:e])
v_ave <- mean(dat$v[s:e])
w_ave <- mean(dat$w[s:e])
ui <- dat$u[s:e] - u_ave
vi <- dat$v[s:e] - v_ave
wi <- dat$w[s:e] - w_ave
uiuj <- array(NA, dim = c(3,3))
uiuj[1,1] <- mean(ui^2)
uiuj[1,2] <- mean(ui*vi)
uiuj[1,3] <- mean(ui*wi)
uiuj[2,2] <- mean(vi^2)
uiuj[2,3] <- mean(vi*wi)
uiuj[3,3] <- mean(wi^2)
df629MON15 <- data.frame(ui, vi, wi)#creates data frame
#plots at each depth
p10 <- ggplot(df629MON15, aes(x= wi, y= vi)) +
geom_point() +
xlim(-0.5, 0.5) +
ylim(-0.75, 0.75) +
xlab(TeX('$w_i$')) +
ylab(TeX('$v_i$'))+
theme(panel.background = element_rect(fill = "white", colour = "black")) +
theme(aspect.ratio = 1)+
theme(axis.text = element_text(face = "plain", size = 12))
start <- as.numeric(ymd_hms("2021-06-29 15:17:00")) # Enter start time here as "YYYY-MM-DD HH:MM:SS" in 24-hour time
end <- as.numeric(ymd_hms("2021-06-29 15:19:00")) # End time, same format
for (i in 1:nrow(dat)) {
if (as.numeric(dat$time[i]) < start) {
s <- i
}
if (as.numeric(dat$time[i]) < end) {
e <- i
}
}
s <- s + 1
e <- e + 1
u_ave <- mean(dat$u[s:e])
v_ave <- mean(dat$v[s:e])
w_ave <- mean(dat$w[s:e])
ui <- dat$u[s:e] - u_ave
vi <- dat$v[s:e] - v_ave
wi <- dat$w[s:e] - w_ave
uiuj <- array(NA, dim = c(3,3))
uiuj[1,1] <- mean(ui^2)
uiuj[1,2] <- mean(ui*vi)
uiuj[1,3] <- mean(ui*wi)
uiuj[2,2] <- mean(vi^2)
uiuj[2,3] <- mean(vi*wi)
uiuj[3,3] <- mean(wi^2)
df629MON15 <- data.frame(ui, vi, wi)#creates data frame
#plots at each depth
p11 <- ggplot(df629MON15, aes(x= wi, y= vi)) +
geom_point() +
xlim(-3, 3) +
ylim(-5, 5) +
xlab(TeX('$w_i$')) +
ylab(TeX('$v_i$'))+
theme(panel.background = element_rect(fill = "white", colour = "black")) +
theme(aspect.ratio = 1)+
theme(axis.text = element_text(face = "plain", size = 12))
start <- as.numeric(ymd_hms("2021-06-29 15:19:00")) # Enter start time here as "YYYY-MM-DD HH:MM:SS" in 24-hour time
end <- as.numeric(ymd_hms("2021-06-29 15:21:00")) # End time, same format
for (i in 1:nrow(dat)) {
if (as.numeric(dat$time[i]) < start) {
s <- i
}
if (as.numeric(dat$time[i]) < end) {
e <- i
}
}
s <- s + 1
e <- e + 1
u_ave <- mean(dat$u[s:e])
v_ave <- mean(dat$v[s:e])
w_ave <- mean(dat$w[s:e])
ui <- dat$u[s:e] - u_ave
vi <- dat$v[s:e] - v_ave
wi <- dat$w[s:e] - w_ave
uiuj <- array(NA, dim = c(3,3))
uiuj[1,1] <- mean(ui^2)
uiuj[1,2] <- mean(ui*vi)
uiuj[1,3] <- mean(ui*wi)
uiuj[2,2] <- mean(vi^2)
uiuj[2,3] <- mean(vi*wi)
uiuj[3,3] <- mean(wi^2)
df629MON15 <- data.frame(ui, vi, wi)#creates data frame
#plots at each depth
p12 <- ggplot(df629MON15, aes(x= wi, y= vi)) +
geom_point() +
xlim(-0.5, 0.5) +
ylim(-0.5, 0.5) +
xlab(TeX('$w_i$')) +
ylab(TeX('$v_i$'))+
theme(panel.background = element_rect(fill = "white", colour = "black")) +
theme(aspect.ratio = 1)+
theme(axis.text = element_text(face = "plain", size = 12))
grid.arrange(p7, p8, arrangeGrob(p9, p10, p11, p12, nrow=4), nrow=1, top = "Monongahela River(cable crossing)")
#Monongahela River
#cable crossing (CC)
#height vs DO
cable_crossing_DO <- read.csv("C:\\Users\\duquesne\\Documents\\Alanna\\DOcablecrossing629.csv")
cable_crossing_DO <- rename(cable_crossing_DO, time = ï..time) # This appears to be needed for Windows...
p7 <- ggplot(cable_crossing_DO, aes(x = DO.mg.l. , y= height.m.))+
geom_point() +
labs(x = "DO (mg/l)", y = "Height(m)") +
ggtitle("Dissolved Oxygen profile") +
theme(panel.background = element_rect(fill = "white", colour = "black")) +
theme(axis.text = element_text(face = "plain", size = 12))
#height vs u
p8 <- ggplot(cable_crossing_DO, aes(x = U.m.s. , y= height.m.))+
geom_point() +
labs(x = "Average Velocity (m/s)", y = "Height(m)") +
ggtitle("Velocity profile") +
theme(panel.background = element_rect(fill = "white", colour = "black")) +
theme(axis.text = element_text(face = "plain", size = 12))
grid.arrange(p7, p8, arrangeGrob(p9, p10, p11, p12, nrow=4), nrow=1, top = "Monongahela River(cable crossing)")
start <- as.numeric(ymd_hms("2021-05-28 17:15:00")) # Enter start time here as "YYYY-MM-DD HH:MM:SS" in 24-hour time
end <- as.numeric(ymd_hms("2021-05-28 17:17:00")) # End time, same format
for (i in 1:nrow(dat)) {
if (as.numeric(dat$time[i]) < start) {
s <- i
}
if (as.numeric(dat$time[i]) < end) {
e <- i
}
}
s <- s + 1
e <- e + 1
u_ave <- mean(dat$u[s:e])
v_ave <- mean(dat$v[s:e])
w_ave <- mean(dat$w[s:e])
ui <- dat$u[s:e] - u_ave
vi <- dat$v[s:e] - v_ave
wi <- dat$w[s:e] - w_ave
uiuj <- array(NA, dim = c(3,3))
uiuj[1,1] <- mean(ui^2)
uiuj[1,2] <- mean(ui*vi)
uiuj[1,3] <- mean(ui*wi)
uiuj[2,2] <- mean(vi^2)
uiuj[2,3] <- mean(vi*wi)
uiuj[3,3] <- mean(wi^2)
df528AR214 <- data.frame(ui, vi, wi)#creates data frame
#plots at each depth
p6 <- ggplot(df528AR214, aes(x= wi, y= vi)) +
geom_point() +
xlab(TeX('$w_i$')) +
ylab(TeX('$v_i$'))+
scale_y_continuous(limits = c(-2, 2), breaks = c(-2, 0, 2))+
scale_x_continuous(limits = c(-2, 2), breaks = c(-2, 0, 2))+
theme(panel.background = element_rect(fill = "white", colour = "black")) +
theme(aspect.ratio = 1)+
theme(axis.text = element_text(face = "plain", size = 12))
grid.arrange(p1, p2, arrangeGrob(p3, p4, p5, p6, nrow=4), nrow=1, top = "Allegheny River")
